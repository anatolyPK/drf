# Generated by Django 4.2.5 on 2023-11-18 09:13

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('stocks', '0006_bond_currency_nominal_alter_coupon_figi_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserBond',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lot', models.FloatField(verbose_name='Количество актива')),
                ('average_price_in_rub', models.FloatField(default=0, verbose_name='Средняя цена в рублях')),
                ('average_price_in_usd', models.FloatField(default=0, verbose_name='Средняя цена в долларах')),
                ('figi', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_bond', to='stocks.bond', verbose_name='figi инструмента')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserBondTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_buy_or_sell', models.BooleanField(choices=[(1, 'Покупка'), (0, 'Продажа')], verbose_name='Операция')),
                ('price_in_rub', models.FloatField(default=0, verbose_name='Цена на момент покупки в рублях')),
                ('price_in_usd', models.FloatField(default=0, verbose_name='Цена на момент покупки в долларах')),
                ('lot', models.FloatField(verbose_name='Количество актива')),
                ('date_operation', models.DateField(default=datetime.datetime(2023, 11, 18, 9, 13, 34, 226890, tzinfo=datetime.timezone.utc))),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stocks.currency', verbose_name='Валюта покупки')),
                ('figi', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_bond_transaction', to='stocks.bond', verbose_name='figi инструмента')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserCurrency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lot', models.FloatField(verbose_name='Количество актива')),
                ('average_price_in_rub', models.FloatField(default=0, verbose_name='Средняя цена в рублях')),
                ('average_price_in_usd', models.FloatField(default=0, verbose_name='Средняя цена в долларах')),
                ('figi', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_currency', to='stocks.currency', verbose_name='figi инструмента')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserCurrencyTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_buy_or_sell', models.BooleanField(choices=[(1, 'Покупка'), (0, 'Продажа')], verbose_name='Операция')),
                ('price_in_rub', models.FloatField(default=0, verbose_name='Цена на момент покупки в рублях')),
                ('price_in_usd', models.FloatField(default=0, verbose_name='Цена на момент покупки в долларах')),
                ('lot', models.FloatField(verbose_name='Количество актива')),
                ('date_operation', models.DateField(default=datetime.datetime(2023, 11, 18, 9, 13, 34, 226890, tzinfo=datetime.timezone.utc))),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stocks.currency', verbose_name='Валюта покупки')),
                ('figi', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_currency_transaction', to='stocks.currency', verbose_name='figi инструмента')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserEtf',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lot', models.FloatField(verbose_name='Количество актива')),
                ('average_price_in_rub', models.FloatField(default=0, verbose_name='Средняя цена в рублях')),
                ('average_price_in_usd', models.FloatField(default=0, verbose_name='Средняя цена в долларах')),
                ('figi', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_etf', to='stocks.etf', verbose_name='figi инструмента')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserEtfTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_buy_or_sell', models.BooleanField(choices=[(1, 'Покупка'), (0, 'Продажа')], verbose_name='Операция')),
                ('price_in_rub', models.FloatField(default=0, verbose_name='Цена на момент покупки в рублях')),
                ('price_in_usd', models.FloatField(default=0, verbose_name='Цена на момент покупки в долларах')),
                ('lot', models.FloatField(verbose_name='Количество актива')),
                ('date_operation', models.DateField(default=datetime.datetime(2023, 11, 18, 9, 13, 34, 226890, tzinfo=datetime.timezone.utc))),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stocks.currency', verbose_name='Валюта покупки')),
                ('figi', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_etf_transaction', to='stocks.etf', verbose_name='figi инструмента')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserShare',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lot', models.FloatField(verbose_name='Количество актива')),
                ('average_price_in_rub', models.FloatField(default=0, verbose_name='Средняя цена в рублях')),
                ('average_price_in_usd', models.FloatField(default=0, verbose_name='Средняя цена в долларах')),
                ('figi', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_share', to='stocks.share', verbose_name='figi инструмента')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserShareTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_buy_or_sell', models.BooleanField(choices=[(1, 'Покупка'), (0, 'Продажа')], verbose_name='Операция')),
                ('price_in_rub', models.FloatField(default=0, verbose_name='Цена на момент покупки в рублях')),
                ('price_in_usd', models.FloatField(default=0, verbose_name='Цена на момент покупки в долларах')),
                ('lot', models.FloatField(verbose_name='Количество актива')),
                ('date_operation', models.DateField(default=datetime.datetime(2023, 11, 18, 9, 13, 34, 226890, tzinfo=datetime.timezone.utc))),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stocks.currency', verbose_name='Валюта покупки')),
                ('figi', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_share_transaction', to='stocks.share', verbose_name='figi инструмента')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.RemoveField(
            model_name='usertransaction',
            name='user',
        ),
        migrations.AlterField(
            model_name='stockinvest',
            name='date_operation',
            field=models.DateField(default=datetime.datetime(2023, 11, 18, 9, 13, 34, 219958, tzinfo=datetime.timezone.utc)),
        ),
        migrations.DeleteModel(
            name='UserStock',
        ),
        migrations.DeleteModel(
            name='UserTransaction',
        ),
    ]
